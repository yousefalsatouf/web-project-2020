security:
    encoders:
        Symfony\Component\Security\Core\User\User: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        chain_provider:
            chain:
                providers: [in_memory, user_db]

        in_memory:
          memory:
            users:
                yousef_admin: {password: '$argon2id$v=19$m=65536,t=4,p=1$Uk9iVVM2eTgwVi5vaDdpbg$kmOzuuGKqu9jBvoD7pYJsyDBVenRului02dKD0MUH4o', roles:['ROLE_ADMIN']}

        user_db:
            entity: { class: App\Entity\User, property: username }

        users:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|img|js)/
            security: false
        main:
            anonymous: true
            guard:
                provider: chain_provider
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
            #oauth:
             #   resource_owners:
              #    facebook:           "/login/check-facebook"
                  #my_github:          "/login/check-github"
               # login_path:        /login
                #use_forward:       false
                #failure_path:      /login

                #oauth_user_provider:
                 # service: my.oauth_aware.user_provider.service
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/(post|comment)/\d+$, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
